name: Build and Deploy Docker images to ECS

on:
  push:
    paths:
      - "app/**"
    branches:
      - main #branch name to configure your work flow to 0only run on push requests 

env:
  # Setting an environment variable with the value of a configuration variable
  ECR_IMAGE: ${{ vars.ECR_IMAGE }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  ECS_CLUSTER: ${{ vars.ECS_CLUSTER }}
  ECS_SERVICE: ${{ vars.ECS_SERVICE }}
jobs: #only 1 job 
  unit-testing: 
    runs-on: ubuntu-latest #operating s
    steps:
      - name: Docker image Testing
        run:
          docker images
          docker run --name app -d  \
              -p 8080:3000  \
              ${{ vars.ECR_REPOSITORY }}/app:${{ github.sha}}

          export IP=$(docker inspect -f '{{range .Networksettings.Networks}}{{.IPAddress}}{{end}}' app)
          echo $IP

          echo Testing image URL wget
          wget -q -o - 127.0.0.1:3000/live | grep live
    

  deploy: #deploy job
    runs-on: ubuntu-latest #operating system
    steps:
      - name: Checkout repository #checkout the code
        uses: actions/checkout@v2 

      - name: Set up QEMU for arm64 #check out the arm64 machine
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        if: runner.os == 'Linux'

      - name: Set up Docker for arm64 #check out docker on the machine 
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm64

      - name: Set up Docker #set up docker on the machine 
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials #set up aws cli and login
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR #login to ECR
        run: |
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      - name: Build and push Docker image # Build and push Docker image to ECR
        run: |
          cd ECS-ASSIGNMENT
          docker buildx create --use
          docker buildx inspect --bootstrap
          docker buildx build --platform linux/arm64 -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com//app:latest --push .

      - name: Deploy to ECS
        uses: imehedi/actions-awscli-v2@latest
        with:
          args: ecs update-service --cluster MY_ECS_CLUSTER --service service --force-new-deployment #only changing the version of the ECR image
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-west-2"